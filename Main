Sub CalculerBornes()
    '=========================================================================
    ' VERSION DEBUG ULTRA-DÉTAILLÉE
    ' Cette version va nous dire exactement où ça bloque
    '=========================================================================
    
    Dim ws As Worksheet
    Dim wsCalcul As Worksheet
    Dim debugInfo As String
    
    On Error GoTo ErrorHandler
    
    debugInfo = "=== DÉBUT DU DEBUG ===" & vbCrLf
    
    ' 1. LISTER TOUTES LES FEUILLES
    '=========================================================================
    debugInfo = debugInfo & "Feuilles dans le classeur :" & vbCrLf
    Dim wsCount As Long
    wsCount = 0
    
    Dim wsTemp As Worksheet
    For Each wsTemp In ThisWorkbook.Worksheets
        wsCount = wsCount + 1
        debugInfo = debugInfo & wsCount & ". " & wsTemp.Name
        
        ' Vérifier les en-têtes
        On Error Resume Next
        Dim h1 As String, h2 As String, h3 As String, h4 As String, h5 As String, h6 As String, h7 As String, h8 As String, h9 As String
        h1 = wsTemp.Cells(1, 1).Value
        h2 = wsTemp.Cells(1, 2).Value
        h3 = wsTemp.Cells(1, 3).Value
        h4 = wsTemp.Cells(1, 4).Value
        h5 = wsTemp.Cells(1, 5).Value
        h6 = wsTemp.Cells(1, 6).Value
        h7 = wsTemp.Cells(1, 7).Value
        h8 = wsTemp.Cells(1, 8).Value
        h9 = wsTemp.Cells(1, 9).Value
        On Error GoTo ErrorHandler
        
        debugInfo = debugInfo & " -> En-têtes: " & h1 & "|" & h2 & "|" & h3 & "|" & h4 & "|" & h5 & "|" & h6 & "|" & h7 & "|" & h8 & "|" & h9 & vbCrLf
        
        ' Choisir cette feuille si elle a les bonnes colonnes
        If wsTemp.Name <> "Calcul des bornes" And ws Is Nothing Then
            If (h1 Like "*ournée*" Or h1 Like "*ourn*" Or h1 = "Tournée") And _
               (h4 Like "*uméro*" Or h4 Like "*um*" Or h4 = "Numéro") And _
               (h6 Like "*oie*" Or h6 = "Voie") And _
               (h7 Like "*ommune*" Or h7 = "Commune") Then
                Set ws = wsTemp
                debugInfo = debugInfo & "    *** FEUILLE SÉLECTIONNÉE ***" & vbCrLf
            End If
        End If
    Next wsTemp
    
    If ws Is Nothing Then
        MsgBox debugInfo & vbCrLf & "PROBLÈME: Aucune feuille source trouvée !", vbCritical
        Exit Sub
    End If
    
    debugInfo = debugInfo & vbCrLf & "Feuille source choisie: " & ws.Name & vbCrLf
    
    ' 2. ANALYSER LES DONNÉES DE LA FEUILLE SOURCE
    '=========================================================================
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    debugInfo = debugInfo & "Dernière ligne avec données: " & lastRow & vbCrLf
    
    If lastRow < 2 Then
        MsgBox debugInfo & vbCrLf & "PROBLÈME: Pas de données (lastRow < 2)", vbExclamation
        Exit Sub
    End If
    
    ' Analyser les 10 premières lignes de données
    debugInfo = debugInfo & vbCrLf & "Analyse des premières lignes:" & vbCrLf
    Dim i As Long
    For i = 2 To WorksheetFunction.Min(11, lastRow)
        Dim ligne As String
        ligne = "Ligne " & i & ": "
        
        Dim j As Long
        For j = 1 To 9
            On Error Resume Next
            Dim cellValue As String
            cellValue = CStr(ws.Cells(i, j).Value)
            If Err.Number <> 0 Then cellValue = "[ERREUR]"
            ligne = ligne & cellValue & "|"
            On Error GoTo ErrorHandler
        Next j
        
        debugInfo = debugInfo & ligne & vbCrLf
    Next i
    
    ' 3. COMPTER LES LIGNES VALIDES
    '=========================================================================
    Dim lignesValides As Long
    Dim voiesUniques As Object
    Set voiesUniques = CreateObject("Scripting.Dictionary")
    
    lignesValides = 0
    
    For i = 2 To lastRow
        On Error Resume Next
        Dim tournee As String, commune As String, voie As String
        tournee = Trim(CStr(ws.Cells(i, 1).Value))
        commune = Trim(CStr(ws.Cells(i, 7).Value))
        voie = Trim(CStr(ws.Cells(i, 6).Value))
        On Error GoTo ErrorHandler
        
        If tournee <> "" And commune <> "" And voie <> "" Then
            lignesValides = lignesValides + 1
            Dim cleVoie As String
            cleVoie = commune & "###" & voie
            
            If Not voiesUniques.Exists(cleVoie) Then
                voiesUniques(cleVoie) = lignesValides
            End If
        End If
    Next i
    
    debugInfo = debugInfo & vbCrLf & "Lignes valides trouvées: " & lignesValides & vbCrLf
    debugInfo = debugInfo & "Voies uniques trouvées: " & voiesUniques.Count & vbCrLf
    
    If voiesUniques.Count = 0 Then
        MsgBox debugInfo & vbCrLf & "PROBLÈME: Aucune voie valide trouvée !" & vbCrLf & _
               "Vérifiez que les colonnes Tournée, Commune et Voie contiennent des données.", vbExclamation
        Exit Sub
    End If
    
    ' Lister quelques voies trouvées
    debugInfo = debugInfo & vbCrLf & "Exemples de voies trouvées:" & vbCrLf
    Dim voiesKeys As Variant
    voiesKeys = voiesUniques.Keys
    For i = 0 To WorksheetFunction.Min(4, UBound(voiesKeys))
        debugInfo = debugInfo & "- " & voiesKeys(i) & vbCrLf
    Next i
    
    ' 4. CRÉER LA FEUILLE RÉSULTAT
    '=========================================================================
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Worksheets("Calcul des bornes").Delete
    On Error GoTo ErrorHandler
    Application.DisplayAlerts = True
    
    Set wsCalcul = ThisWorkbook.Worksheets.Add
    wsCalcul.Name = "Calcul des bornes"
    
    ' En-têtes
    With wsCalcul
        .Cells(1, 1) = "Commune"
        .Cells(1, 2) = "Mot directeur"
        .Cells(1, 3) = "Libelle de voie"
        .Cells(1, 4) = "Ligne 3"
        .Cells(1, 5) = "Numéro de voie (borne)"
        .Cells(1, 6) = "Libelle District"
        .Cells(1, 7) = "Tournée"
        .Cells(1, 8) = "Sécable"
        .Cells(1, 9) = "Samedi"
        
        .Range("A1:I1").Font.Bold = True
        .Range("A1:I1").Interior.Color = RGB(180, 198, 231)
    End With
    
    debugInfo = debugInfo & vbCrLf & "Feuille 'Calcul des bornes' créée." & vbCrLf
    
    ' 5. TRAITEMENT ULTRA-SIMPLIFIÉ
    '=========================================================================
    Dim ligneResultat As Long
    ligneResultat = 2
    
    ' Traiter chaque voie une par une
    For i = 0 To UBound(voiesKeys)
        Call TraiterVoieDebug(voiesKeys(i), ws, wsCalcul, ligneResultat, debugInfo)
    Next i
    
    Dim nbResultats As Long
    nbResultats = ligneResultat - 2
    
    debugInfo = debugInfo & vbCrLf & "RÉSULTATS FINAUX:" & vbCrLf
    debugInfo = debugInfo & "- Voies traitées: " & voiesUniques.Count & vbCrLf
    debugInfo = debugInfo & "- Lignes de résultat: " & nbResultats & vbCrLf
    
    ' Mise en forme finale
    With wsCalcul
        .Columns("A:I").AutoFit
        If nbResultats > 0 Then
            .Range("A1:I" & ligneResultat - 1).Borders.LineStyle = xlContinuous
        End If
        .Range("A1:I1").HorizontalAlignment = xlCenter
        .Range("A1").Select
    End With
    
    ' Message final
    MsgBox debugInfo & vbCrLf & "=== FIN DU DEBUG ===", vbInformation
    
    Exit Sub
    
ErrorHandler:
    MsgBox "ERREUR: " & Err.Description & " (Ligne " & Erl & ")" & vbCrLf & vbCrLf & debugInfo, vbCritical
End Sub

Sub TraiterVoieDebug(ByVal cleVoie As String, ByRef ws As Worksheet, ByRef wsCalcul As Worksheet, ByRef ligneResultat As Long, ByRef debugInfo As String)
    On Error GoTo ErreurVoie
    
    ' Extraire commune et voie de la clé
    Dim parts As Variant
    parts = Split(cleVoie, "###")
    If UBound(parts) < 1 Then Exit Sub
    
    Dim commune As String, voie As String
    commune = parts(0)
    voie = parts(1)
    
    ' Trouver toutes les lignes de cette voie
    Dim lastRow As Long
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    
    ' Variables pour cette voie
    Dim premiereLigne As Long
    Dim tournees As New Collection
    Dim numeros As New Collection
    premiereLigne = -1
    
    Dim i As Long
    For i = 2 To lastRow
        On Error Resume Next
        Dim communeLigne As String, voieLigne As String, tourneeLigne As String
        communeLigne = Trim(CStr(ws.Cells(i, 7).Value))
        voieLigne = Trim(CStr(ws.Cells(i, 6).Value))
        tourneeLigne = Trim(CStr(ws.Cells(i, 1).Value))
        On Error GoTo ErreurVoie
        
        If communeLigne = commune And voieLigne = voie Then
            If premiereLigne = -1 Then premiereLigne = i
            
            ' Collecter tournées uniques
            If tourneeLigne <> "" Then
                On Error Resume Next
                Dim temp As String
                temp = tournees(tourneeLigne)
                If Err.Number <> 0 Then
                    tournees.Add tourneeLigne, tourneeLigne
                End If
                On Error GoTo ErreurVoie
            End If
            
            ' Collecter numéros
            Dim numero As Variant
            numero = ws.Cells(i, 4).Value
            If IsNumeric(numero) And numero > 0 Then
                numeros.Add CLng(numero)
            End If
        End If
    Next i
    
    If premiereLigne = -1 Then Exit Sub
    
    ' Récupérer les données de référence
    On Error Resume Next
    Dim motDirecteur As String, ligne3 As String, libelleDistrict As String
    Dim secable As String, samedi As String, tourneeRef As String
    
    motDirecteur = Trim(CStr(ws.Cells(premiereLigne, 5).Value))
    ligne3 = Trim(CStr(ws.Cells(premiereLigne, 3).Value))
    libelleDistrict = Trim(CStr(ws.Cells(premiereLigne, 2).Value))
    secable = Trim(CStr(ws.Cells(premiereLigne, 8).Value))
    samedi = Trim(CStr(ws.Cells(premiereLigne, 9).Value))
    tourneeRef = Trim(CStr(ws.Cells(premiereLigne, 1).Value))
    On Error GoTo ErreurVoie
    
    ' Écrire le résultat (version simplifiée : une ligne par voie)
    With wsCalcul
        .Cells(ligneResultat, 1) = commune
        .Cells(ligneResultat, 2) = motDirecteur
        .Cells(ligneResultat, 3) = voie
        .Cells(ligneResultat, 4) = ligne3
        
        ' Calculer la borne si nécessaire
        If numeros.Count > 1 Then
            Dim minNum As Long, maxNum As Long
            minNum = numeros(1)
            maxNum = numeros(1)
            
            Dim j As Long
            For j = 2 To numeros.Count
                If numeros(j) < minNum Then minNum = numeros(j)
                If numeros(j) > maxNum Then maxNum = numeros(j)
            Next j
            
            .Cells(ligneResultat, 5) = minNum & " → " & maxNum
        Else
            .Cells(ligneResultat, 5) = "" ' Voie complète
        End If
        
        .Cells(ligneResultat, 6) = libelleDistrict
        .Cells(ligneResultat, 7) = tourneeRef
        .Cells(ligneResultat, 8) = secable
        .Cells(ligneResultat, 9) = samedi
    End With
    
    ligneResultat = ligneResultat + 1
    
    Exit Sub
    
ErreurVoie:
    debugInfo = debugInfo & "Erreur sur voie: " & cleVoie & " - " & Err.Description & vbCrLf
End Sub
